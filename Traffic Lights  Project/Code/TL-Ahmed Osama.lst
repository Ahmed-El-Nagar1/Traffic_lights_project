;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 7/31/2023 9:21:57 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2946      	GOTO       326
_display_Manual:
;TL-Ahmed Osama.c,27 :: 		int display_Manual(int color){
;TL-Ahmed Osama.c,28 :: 		portc.b2 = 0;
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x1107      	BCF        PORTC, 2
;TL-Ahmed Osama.c,30 :: 		if(portc.b2 != 0){
0x0006	0x1D07      	BTFSS      PORTC, 2
0x0007	0x2855      	GOTO       L_display_Manual11
;TL-Ahmed Osama.c,32 :: 		while(porta.b4 == 1 && portc.b2 != 0);
L_display_Manual12:
0x0008	0x1E05      	BTFSS      PORTA, 4
0x0009	0x280D      	GOTO       L_display_Manual13
0x000A	0x1D07      	BTFSS      PORTC, 2
0x000B	0x280D      	GOTO       L_display_Manual13
L__display_Manual46:
0x000C	0x2808      	GOTO       L_display_Manual12
L_display_Manual13:
;TL-Ahmed Osama.c,34 :: 		for(counter = 3;counter>=0;--counter){
0x000D	0x3003      	MOVLW      3
0x000E	0x00D2      	MOVWF      _counter
0x000F	0x3000      	MOVLW      0
0x0010	0x00D3      	MOVWF      _counter+1
L_display_Manual16:
0x0011	0x3080      	MOVLW      128
0x0012	0x0653      	XORWF      _counter+1, 0
0x0013	0x00F0      	MOVWF      R0
0x0014	0x3080      	MOVLW      128
0x0015	0x0270      	SUBWF      R0, 0
0x0016	0x1D03      	BTFSS      STATUS, 2
0x0017	0x281A      	GOTO       L__display_Manual55
0x0018	0x3000      	MOVLW      0
0x0019	0x0252      	SUBWF      _counter, 0
L__display_Manual55:
0x001A	0x1C03      	BTFSS      STATUS, 0
0x001B	0x2854      	GOTO       L_display_Manual17
;TL-Ahmed Osama.c,36 :: 		if(portc.b2 != 0){
0x001C	0x1D07      	BTFSS      PORTC, 2
0x001D	0x284E      	GOTO       L_display_Manual19
;TL-Ahmed Osama.c,38 :: 		if(color == 0){
0x001E	0x3000      	MOVLW      0
0x001F	0x0659      	XORWF      FARG_display_Manual_color+1, 0
0x0020	0x1D03      	BTFSS      STATUS, 2
0x0021	0x2824      	GOTO       L__display_Manual56
0x0022	0x3000      	MOVLW      0
0x0023	0x0658      	XORWF      FARG_display_Manual_color, 0
L__display_Manual56:
0x0024	0x1D03      	BTFSS      STATUS, 2
0x0025	0x2828      	GOTO       L_display_Manual20
;TL-Ahmed Osama.c,39 :: 		portd.b7=0;
0x0026	0x1388      	BCF        PORTD, 7
;TL-Ahmed Osama.c,40 :: 		portd.b6=1;
0x0027	0x1708      	BSF        PORTD, 6
;TL-Ahmed Osama.c,41 :: 		}
L_display_Manual20:
;TL-Ahmed Osama.c,42 :: 		if(color == 1){
0x0028	0x3000      	MOVLW      0
0x0029	0x0659      	XORWF      FARG_display_Manual_color+1, 0
0x002A	0x1D03      	BTFSS      STATUS, 2
0x002B	0x282E      	GOTO       L__display_Manual57
0x002C	0x3001      	MOVLW      1
0x002D	0x0658      	XORWF      FARG_display_Manual_color, 0
L__display_Manual57:
0x002E	0x1D03      	BTFSS      STATUS, 2
0x002F	0x2832      	GOTO       L_display_Manual21
;TL-Ahmed Osama.c,43 :: 		portd.b4 = 0;
0x0030	0x1208      	BCF        PORTD, 4
;TL-Ahmed Osama.c,44 :: 		portd.b3 = 1;
0x0031	0x1588      	BSF        PORTD, 3
;TL-Ahmed Osama.c,45 :: 		}
L_display_Manual21:
;TL-Ahmed Osama.c,47 :: 		portb = number[counter];
0x0032	0x0852      	MOVF       _counter, 0
0x0033	0x00F0      	MOVWF      R0
0x0034	0x0853      	MOVF       _counter+1, 0
0x0035	0x00F1      	MOVWF      R0+1
0x0036	0x0DF0      	RLF        R0, 1
0x0037	0x0DF1      	RLF        R0+1, 1
0x0038	0x1070      	BCF        R0, 0
0x0039	0x0870      	MOVF       R0, 0
0x003A	0x3E20      	ADDLW      _number
0x003B	0x0084      	MOVWF      FSR
0x003C	0x0800      	MOVF       INDF, 0
0x003D	0x0086      	MOVWF      PORTB
;TL-Ahmed Osama.c,49 :: 		delay_ms(1000);
0x003E	0x300B      	MOVLW      11
0x003F	0x00FB      	MOVWF      R11
0x0040	0x3026      	MOVLW      38
0x0041	0x00FC      	MOVWF      R12
0x0042	0x305D      	MOVLW      93
0x0043	0x00FD      	MOVWF      R13
L_display_Manual22:
0x0044	0x0BFD      	DECFSZ     R13, 1
0x0045	0x2844      	GOTO       L_display_Manual22
0x0046	0x0BFC      	DECFSZ     R12, 1
0x0047	0x2844      	GOTO       L_display_Manual22
0x0048	0x0BFB      	DECFSZ     R11, 1
0x0049	0x2844      	GOTO       L_display_Manual22
0x004A	0x0000      	NOP
0x004B	0x0000      	NOP
;TL-Ahmed Osama.c,50 :: 		portc.b2 = 0;
0x004C	0x1107      	BCF        PORTC, 2
;TL-Ahmed Osama.c,51 :: 		}else{
0x004D	0x284F      	GOTO       L_display_Manual23
L_display_Manual19:
;TL-Ahmed Osama.c,52 :: 		break;
0x004E	0x2854      	GOTO       L_display_Manual17
;TL-Ahmed Osama.c,53 :: 		}
L_display_Manual23:
;TL-Ahmed Osama.c,34 :: 		for(counter = 3;counter>=0;--counter){
0x004F	0x3001      	MOVLW      1
0x0050	0x02D2      	SUBWF      _counter, 1
0x0051	0x1C03      	BTFSS      STATUS, 0
0x0052	0x03D3      	DECF       _counter+1, 1
;TL-Ahmed Osama.c,55 :: 		}
0x0053	0x2811      	GOTO       L_display_Manual16
L_display_Manual17:
;TL-Ahmed Osama.c,56 :: 		}else{
0x0054	0x2856      	GOTO       L_display_Manual24
L_display_Manual11:
;TL-Ahmed Osama.c,57 :: 		return;
0x0055	0x2859      	GOTO       L_end_display_Manual
;TL-Ahmed Osama.c,58 :: 		}
L_display_Manual24:
;TL-Ahmed Osama.c,59 :: 		while(porta.b4 == 0);
L_display_Manual25:
0x0056	0x1A05      	BTFSC      PORTA, 4
0x0057	0x2859      	GOTO       L_display_Manual26
0x0058	0x2856      	GOTO       L_display_Manual25
L_display_Manual26:
;TL-Ahmed Osama.c,60 :: 		}
L_end_display_Manual:
0x0059	0x0008      	RETURN
; end of _display_Manual
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x005A	0x1283      	BCF        STATUS, 5
0x005B	0x1303      	BCF        STATUS, 6
0x005C	0x0855      	MOVF       ___DoICPAddr+1, 0
0x005D	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x005E	0x0854      	MOVF       ___DoICPAddr, 0
0x005F	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0060	0x0008      	RETURN
; end of _____DoICP
_display_Auto:
;TL-Ahmed Osama.c,6 :: 		void display_Auto(int timer, int color){
;TL-Ahmed Osama.c,7 :: 		for(counter = timer; counter >= 0 ;--counter){
0x0061	0x1283      	BCF        STATUS, 5
0x0062	0x1303      	BCF        STATUS, 6
0x0063	0x0858      	MOVF       FARG_display_Auto_timer, 0
0x0064	0x00D2      	MOVWF      _counter
0x0065	0x0859      	MOVF       FARG_display_Auto_timer+1, 0
0x0066	0x00D3      	MOVWF      _counter+1
L_display_Auto0:
0x0067	0x3080      	MOVLW      128
0x0068	0x0653      	XORWF      _counter+1, 0
0x0069	0x00F0      	MOVWF      R0
0x006A	0x3080      	MOVLW      128
0x006B	0x0270      	SUBWF      R0, 0
0x006C	0x1D03      	BTFSS      STATUS, 2
0x006D	0x2870      	GOTO       L__display_Auto49
0x006E	0x3000      	MOVLW      0
0x006F	0x0252      	SUBWF      _counter, 0
L__display_Auto49:
0x0070	0x1C03      	BTFSS      STATUS, 0
0x0071	0x28BA      	GOTO       L_display_Auto1
;TL-Ahmed Osama.c,8 :: 		if(portc.b2 == 1){
0x0072	0x1D07      	BTFSS      PORTC, 2
0x0073	0x2877      	GOTO       L_display_Auto3
;TL-Ahmed Osama.c,9 :: 		color = 0;
0x0074	0x01DA      	CLRF       FARG_display_Auto_color
0x0075	0x01DB      	CLRF       FARG_display_Auto_color+1
;TL-Ahmed Osama.c,10 :: 		break;
0x0076	0x28BA      	GOTO       L_display_Auto1
;TL-Ahmed Osama.c,11 :: 		}
L_display_Auto3:
;TL-Ahmed Osama.c,12 :: 		portb = number[counter];
0x0077	0x0852      	MOVF       _counter, 0
0x0078	0x00F0      	MOVWF      R0
0x0079	0x0853      	MOVF       _counter+1, 0
0x007A	0x00F1      	MOVWF      R0+1
0x007B	0x0DF0      	RLF        R0, 1
0x007C	0x0DF1      	RLF        R0+1, 1
0x007D	0x1070      	BCF        R0, 0
0x007E	0x0870      	MOVF       R0, 0
0x007F	0x3E20      	ADDLW      _number
0x0080	0x0084      	MOVWF      FSR
0x0081	0x0800      	MOVF       INDF, 0
0x0082	0x0086      	MOVWF      PORTB
;TL-Ahmed Osama.c,13 :: 		if(counter == 3 && color == 0){
0x0083	0x3000      	MOVLW      0
0x0084	0x0653      	XORWF      _counter+1, 0
0x0085	0x1D03      	BTFSS      STATUS, 2
0x0086	0x2889      	GOTO       L__display_Auto50
0x0087	0x3003      	MOVLW      3
0x0088	0x0652      	XORWF      _counter, 0
L__display_Auto50:
0x0089	0x1D03      	BTFSS      STATUS, 2
0x008A	0x2895      	GOTO       L_display_Auto6
0x008B	0x3000      	MOVLW      0
0x008C	0x065B      	XORWF      FARG_display_Auto_color+1, 0
0x008D	0x1D03      	BTFSS      STATUS, 2
0x008E	0x2891      	GOTO       L__display_Auto51
0x008F	0x3000      	MOVLW      0
0x0090	0x065A      	XORWF      FARG_display_Auto_color, 0
L__display_Auto51:
0x0091	0x1D03      	BTFSS      STATUS, 2
0x0092	0x2895      	GOTO       L_display_Auto6
L__display_Auto45:
;TL-Ahmed Osama.c,14 :: 		portd.b7=0;
0x0093	0x1388      	BCF        PORTD, 7
;TL-Ahmed Osama.c,15 :: 		portd.b6=1;
0x0094	0x1708      	BSF        PORTD, 6
;TL-Ahmed Osama.c,16 :: 		}
L_display_Auto6:
;TL-Ahmed Osama.c,17 :: 		if(counter == 3 && color == 1){
0x0095	0x3000      	MOVLW      0
0x0096	0x0653      	XORWF      _counter+1, 0
0x0097	0x1D03      	BTFSS      STATUS, 2
0x0098	0x289B      	GOTO       L__display_Auto52
0x0099	0x3003      	MOVLW      3
0x009A	0x0652      	XORWF      _counter, 0
L__display_Auto52:
0x009B	0x1D03      	BTFSS      STATUS, 2
0x009C	0x28A7      	GOTO       L_display_Auto9
0x009D	0x3000      	MOVLW      0
0x009E	0x065B      	XORWF      FARG_display_Auto_color+1, 0
0x009F	0x1D03      	BTFSS      STATUS, 2
0x00A0	0x28A3      	GOTO       L__display_Auto53
0x00A1	0x3001      	MOVLW      1
0x00A2	0x065A      	XORWF      FARG_display_Auto_color, 0
L__display_Auto53:
0x00A3	0x1D03      	BTFSS      STATUS, 2
0x00A4	0x28A7      	GOTO       L_display_Auto9
L__display_Auto44:
;TL-Ahmed Osama.c,18 :: 		portd.b3=1;
0x00A5	0x1588      	BSF        PORTD, 3
;TL-Ahmed Osama.c,19 :: 		portd.b4=0;
0x00A6	0x1208      	BCF        PORTD, 4
;TL-Ahmed Osama.c,20 :: 		}
L_display_Auto9:
;TL-Ahmed Osama.c,21 :: 		delay_ms(1000);
0x00A7	0x300B      	MOVLW      11
0x00A8	0x00FB      	MOVWF      R11
0x00A9	0x3026      	MOVLW      38
0x00AA	0x00FC      	MOVWF      R12
0x00AB	0x305D      	MOVLW      93
0x00AC	0x00FD      	MOVWF      R13
L_display_Auto10:
0x00AD	0x0BFD      	DECFSZ     R13, 1
0x00AE	0x28AD      	GOTO       L_display_Auto10
0x00AF	0x0BFC      	DECFSZ     R12, 1
0x00B0	0x28AD      	GOTO       L_display_Auto10
0x00B1	0x0BFB      	DECFSZ     R11, 1
0x00B2	0x28AD      	GOTO       L_display_Auto10
0x00B3	0x0000      	NOP
0x00B4	0x0000      	NOP
;TL-Ahmed Osama.c,7 :: 		for(counter = timer; counter >= 0 ;--counter){
0x00B5	0x3001      	MOVLW      1
0x00B6	0x02D2      	SUBWF      _counter, 1
0x00B7	0x1C03      	BTFSS      STATUS, 0
0x00B8	0x03D3      	DECF       _counter+1, 1
;TL-Ahmed Osama.c,23 :: 		}
0x00B9	0x2867      	GOTO       L_display_Auto0
L_display_Auto1:
;TL-Ahmed Osama.c,25 :: 		}
L_end_display_Auto:
0x00BA	0x0008      	RETURN
; end of _display_Auto
_Manual:
;TL-Ahmed Osama.c,111 :: 		void Manual(int color){
;TL-Ahmed Osama.c,113 :: 		while(portc.b2 == 1){
L_Manual36:
0x00BB	0x1283      	BCF        STATUS, 5
0x00BC	0x1303      	BCF        STATUS, 6
0x00BD	0x1D07      	BTFSS      PORTC, 2
0x00BE	0x28EC      	GOTO       L_Manual37
;TL-Ahmed Osama.c,115 :: 		if(color == 0){
0x00BF	0x3000      	MOVLW      0
0x00C0	0x0657      	XORWF      FARG_Manual_color+1, 0
0x00C1	0x1D03      	BTFSS      STATUS, 2
0x00C2	0x28C5      	GOTO       L__Manual63
0x00C3	0x3000      	MOVLW      0
0x00C4	0x0656      	XORWF      FARG_Manual_color, 0
L__Manual63:
0x00C5	0x1D03      	BTFSS      STATUS, 2
0x00C6	0x28D7      	GOTO       L_Manual38
;TL-Ahmed Osama.c,116 :: 		portd.b4 = 0;
0x00C7	0x1208      	BCF        PORTD, 4
;TL-Ahmed Osama.c,118 :: 		portd.b3 = 0;
0x00C8	0x1188      	BCF        PORTD, 3
;TL-Ahmed Osama.c,120 :: 		portd.b2=1;
0x00C9	0x1508      	BSF        PORTD, 2
;TL-Ahmed Osama.c,122 :: 		portd.b7=1;
0x00CA	0x1788      	BSF        PORTD, 7
;TL-Ahmed Osama.c,124 :: 		display_Manual(color);
0x00CB	0x0856      	MOVF       FARG_Manual_color, 0
0x00CC	0x00D8      	MOVWF      FARG_display_Manual_color
0x00CD	0x0857      	MOVF       FARG_Manual_color+1, 0
0x00CE	0x00D9      	MOVWF      FARG_display_Manual_color+1
0x00CF	0x2003      	CALL       _display_Manual
;TL-Ahmed Osama.c,126 :: 		portd.b5 = 1;
0x00D0	0x1688      	BSF        PORTD, 5
;TL-Ahmed Osama.c,128 :: 		portd.b2 = 0;
0x00D1	0x1108      	BCF        PORTD, 2
;TL-Ahmed Osama.c,130 :: 		portd.b4=1;
0x00D2	0x1608      	BSF        PORTD, 4
;TL-Ahmed Osama.c,132 :: 		portd.b6 = 0;
0x00D3	0x1308      	BCF        PORTD, 6
;TL-Ahmed Osama.c,134 :: 		color++;
0x00D4	0x0AD6      	INCF       FARG_Manual_color, 1
0x00D5	0x1903      	BTFSC      STATUS, 2
0x00D6	0x0AD7      	INCF       FARG_Manual_color+1, 1
;TL-Ahmed Osama.c,135 :: 		}
L_Manual38:
;TL-Ahmed Osama.c,138 :: 		if(color == 1){
0x00D7	0x3000      	MOVLW      0
0x00D8	0x0657      	XORWF      FARG_Manual_color+1, 0
0x00D9	0x1D03      	BTFSS      STATUS, 2
0x00DA	0x28DD      	GOTO       L__Manual64
0x00DB	0x3001      	MOVLW      1
0x00DC	0x0656      	XORWF      FARG_Manual_color, 0
L__Manual64:
0x00DD	0x1D03      	BTFSS      STATUS, 2
0x00DE	0x28E9      	GOTO       L_Manual39
;TL-Ahmed Osama.c,139 :: 		display_Manual(color);
0x00DF	0x0856      	MOVF       FARG_Manual_color, 0
0x00E0	0x00D8      	MOVWF      FARG_display_Manual_color
0x00E1	0x0857      	MOVF       FARG_Manual_color+1, 0
0x00E2	0x00D9      	MOVWF      FARG_display_Manual_color+1
0x00E3	0x2003      	CALL       _display_Manual
;TL-Ahmed Osama.c,141 :: 		portd.b5 = 0;
0x00E4	0x1288      	BCF        PORTD, 5
;TL-Ahmed Osama.c,143 :: 		portd.b4 = 1;
0x00E5	0x1608      	BSF        PORTD, 4
;TL-Ahmed Osama.c,145 :: 		portb.b2 = 1;
0x00E6	0x1506      	BSF        PORTB, 2
;TL-Ahmed Osama.c,147 :: 		color = 0;
0x00E7	0x01D6      	CLRF       FARG_Manual_color
0x00E8	0x01D7      	CLRF       FARG_Manual_color+1
;TL-Ahmed Osama.c,148 :: 		}
L_Manual39:
;TL-Ahmed Osama.c,149 :: 		portb =0;
0x00E9	0x0186      	CLRF       PORTB
;TL-Ahmed Osama.c,151 :: 		portc.b2=0;
0x00EA	0x1107      	BCF        PORTC, 2
;TL-Ahmed Osama.c,152 :: 		}
0x00EB	0x28BB      	GOTO       L_Manual36
L_Manual37:
;TL-Ahmed Osama.c,153 :: 		}
L_end_Manual:
0x00EC	0x0008      	RETURN
; end of _Manual
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x00ED	0x205A      	CALL       _____DoICP
0x00EE	0x118A      	BCF        PCLATH, 3
0x00EF	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x00F0	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x00F1	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x00F2	0x0AD4      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x00F3	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x00F4	0x0AD5      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x00F5	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x00F6	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x00F7	0x28ED      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x00F8	0x0008      	RETURN
; end of ___CC2DW
_Auto:
;TL-Ahmed Osama.c,67 :: 		void Auto(int color){
;TL-Ahmed Osama.c,68 :: 		while(portc.b2 != 1){
L_Auto27:
0x00F9	0x1283      	BCF        STATUS, 5
0x00FA	0x1303      	BCF        STATUS, 6
0x00FB	0x1907      	BTFSC      PORTC, 2
0x00FC	0x2945      	GOTO       L_Auto28
;TL-Ahmed Osama.c,72 :: 		if (color == 0){
0x00FD	0x3000      	MOVLW      0
0x00FE	0x0657      	XORWF      FARG_Auto_color+1, 0
0x00FF	0x1D03      	BTFSS      STATUS, 2
0x0100	0x2903      	GOTO       L__Auto59
0x0101	0x3000      	MOVLW      0
0x0102	0x0656      	XORWF      FARG_Auto_color, 0
L__Auto59:
0x0103	0x1D03      	BTFSS      STATUS, 2
0x0104	0x2918      	GOTO       L_Auto29
;TL-Ahmed Osama.c,73 :: 		portd.b2=1;
0x0105	0x1508      	BSF        PORTD, 2
;TL-Ahmed Osama.c,74 :: 		portd.b7=1;
0x0106	0x1788      	BSF        PORTD, 7
;TL-Ahmed Osama.c,75 :: 		display_Auto(23,color);
0x0107	0x3017      	MOVLW      23
0x0108	0x00D8      	MOVWF      FARG_display_Auto_timer
0x0109	0x3000      	MOVLW      0
0x010A	0x00D9      	MOVWF      FARG_display_Auto_timer+1
0x010B	0x0856      	MOVF       FARG_Auto_color, 0
0x010C	0x00DA      	MOVWF      FARG_display_Auto_color
0x010D	0x0857      	MOVF       FARG_Auto_color+1, 0
0x010E	0x00DB      	MOVWF      FARG_display_Auto_color+1
0x010F	0x2061      	CALL       _display_Auto
;TL-Ahmed Osama.c,76 :: 		if(portc.b2 == 1){
0x0110	0x1D07      	BTFSS      PORTC, 2
0x0111	0x2913      	GOTO       L_Auto30
;TL-Ahmed Osama.c,77 :: 		return;
0x0112	0x2945      	GOTO       L_end_Auto
;TL-Ahmed Osama.c,78 :: 		}
L_Auto30:
;TL-Ahmed Osama.c,79 :: 		portd.b2 = 0;
0x0113	0x1108      	BCF        PORTD, 2
;TL-Ahmed Osama.c,80 :: 		portd.b6 = 0;
0x0114	0x1308      	BCF        PORTD, 6
;TL-Ahmed Osama.c,81 :: 		color++;
0x0115	0x0AD6      	INCF       FARG_Auto_color, 1
0x0116	0x1903      	BTFSC      STATUS, 2
0x0117	0x0AD7      	INCF       FARG_Auto_color+1, 1
;TL-Ahmed Osama.c,82 :: 		}
L_Auto29:
;TL-Ahmed Osama.c,86 :: 		if(color == 1){
0x0118	0x3000      	MOVLW      0
0x0119	0x0657      	XORWF      FARG_Auto_color+1, 0
0x011A	0x1D03      	BTFSS      STATUS, 2
0x011B	0x291E      	GOTO       L__Auto60
0x011C	0x3001      	MOVLW      1
0x011D	0x0656      	XORWF      FARG_Auto_color, 0
L__Auto60:
0x011E	0x1D03      	BTFSS      STATUS, 2
0x011F	0x2933      	GOTO       L_Auto31
;TL-Ahmed Osama.c,87 :: 		portd.b4 = 1;
0x0120	0x1608      	BSF        PORTD, 4
;TL-Ahmed Osama.c,88 :: 		portd.b5 = 1;
0x0121	0x1688      	BSF        PORTD, 5
;TL-Ahmed Osama.c,89 :: 		display_Auto(15,color);
0x0122	0x300F      	MOVLW      15
0x0123	0x00D8      	MOVWF      FARG_display_Auto_timer
0x0124	0x3000      	MOVLW      0
0x0125	0x00D9      	MOVWF      FARG_display_Auto_timer+1
0x0126	0x0856      	MOVF       FARG_Auto_color, 0
0x0127	0x00DA      	MOVWF      FARG_display_Auto_color
0x0128	0x0857      	MOVF       FARG_Auto_color+1, 0
0x0129	0x00DB      	MOVWF      FARG_display_Auto_color+1
0x012A	0x2061      	CALL       _display_Auto
;TL-Ahmed Osama.c,90 :: 		if(portc.b2 == 1){
0x012B	0x1D07      	BTFSS      PORTC, 2
0x012C	0x292E      	GOTO       L_Auto32
;TL-Ahmed Osama.c,91 :: 		return;
0x012D	0x2945      	GOTO       L_end_Auto
;TL-Ahmed Osama.c,92 :: 		}
L_Auto32:
;TL-Ahmed Osama.c,93 :: 		portd.b4=0;
0x012E	0x1208      	BCF        PORTD, 4
;TL-Ahmed Osama.c,94 :: 		portd.b5=0;
0x012F	0x1288      	BCF        PORTD, 5
;TL-Ahmed Osama.c,95 :: 		color++;
0x0130	0x0AD6      	INCF       FARG_Auto_color, 1
0x0131	0x1903      	BTFSC      STATUS, 2
0x0132	0x0AD7      	INCF       FARG_Auto_color+1, 1
;TL-Ahmed Osama.c,96 :: 		}
L_Auto31:
;TL-Ahmed Osama.c,100 :: 		if(color == 2 && portc.b2 != 1){
0x0133	0x3000      	MOVLW      0
0x0134	0x0657      	XORWF      FARG_Auto_color+1, 0
0x0135	0x1D03      	BTFSS      STATUS, 2
0x0136	0x2939      	GOTO       L__Auto61
0x0137	0x3002      	MOVLW      2
0x0138	0x0656      	XORWF      FARG_Auto_color, 0
L__Auto61:
0x0139	0x1D03      	BTFSS      STATUS, 2
0x013A	0x2944      	GOTO       L_Auto35
0x013B	0x1907      	BTFSC      PORTC, 2
0x013C	0x2944      	GOTO       L_Auto35
L__Auto47:
;TL-Ahmed Osama.c,101 :: 		portd.b3 = 0;
0x013D	0x1188      	BCF        PORTD, 3
;TL-Ahmed Osama.c,102 :: 		portd.b2 = 1;
0x013E	0x1508      	BSF        PORTD, 2
;TL-Ahmed Osama.c,103 :: 		portd.b7 = 1;
0x013F	0x1788      	BSF        PORTD, 7
;TL-Ahmed Osama.c,104 :: 		portd.b4 = 0;
0x0140	0x1208      	BCF        PORTD, 4
;TL-Ahmed Osama.c,105 :: 		portd.b2 = 0;
0x0141	0x1108      	BCF        PORTD, 2
;TL-Ahmed Osama.c,106 :: 		color = 0;
0x0142	0x01D6      	CLRF       FARG_Auto_color
0x0143	0x01D7      	CLRF       FARG_Auto_color+1
;TL-Ahmed Osama.c,107 :: 		}
L_Auto35:
;TL-Ahmed Osama.c,108 :: 		}
0x0144	0x28F9      	GOTO       L_Auto27
L_Auto28:
;TL-Ahmed Osama.c,109 :: 		}
L_end_Auto:
0x0145	0x0008      	RETURN
; end of _Auto
_main:
0x0146	0x21A2      	CALL       418
;TL-Ahmed Osama.c,155 :: 		void main() {
;TL-Ahmed Osama.c,156 :: 		ADCON1 = 0x07;
0x0147	0x3007      	MOVLW      7
0x0148	0x1683      	BSF        STATUS, 5
0x0149	0x1303      	BCF        STATUS, 6
0x014A	0x009F      	MOVWF      ADCON1
;TL-Ahmed Osama.c,157 :: 		trisb = 0x00;
0x014B	0x0186      	CLRF       TRISB
;TL-Ahmed Osama.c,158 :: 		trisd = 0x00;
0x014C	0x0188      	CLRF       TRISD
;TL-Ahmed Osama.c,159 :: 		trisc = 0x00;
0x014D	0x0187      	CLRF       TRISC
;TL-Ahmed Osama.c,160 :: 		porta = 0;
0x014E	0x1283      	BCF        STATUS, 5
0x014F	0x0185      	CLRF       PORTA
;TL-Ahmed Osama.c,161 :: 		trisa.b4 = 1;
0x0150	0x1683      	BSF        STATUS, 5
0x0151	0x1605      	BSF        TRISA, 4
;TL-Ahmed Osama.c,162 :: 		portd = 0;
0x0152	0x1283      	BCF        STATUS, 5
0x0153	0x0188      	CLRF       PORTD
;TL-Ahmed Osama.c,163 :: 		portb = 0;
0x0154	0x0186      	CLRF       PORTB
;TL-Ahmed Osama.c,164 :: 		portc = 0;
0x0155	0x0187      	CLRF       PORTC
;TL-Ahmed Osama.c,165 :: 		portc.b0 = 1;
0x0156	0x1407      	BSF        PORTC, 0
;TL-Ahmed Osama.c,166 :: 		while(1){
L_main40:
;TL-Ahmed Osama.c,167 :: 		portd = 0;
0x0157	0x0188      	CLRF       PORTD
;TL-Ahmed Osama.c,168 :: 		portb = 0;
0x0158	0x0186      	CLRF       PORTB
;TL-Ahmed Osama.c,169 :: 		if(portc.b2 != 1){
0x0159	0x1907      	BTFSC      PORTC, 2
0x015A	0x2961      	GOTO       L_main42
;TL-Ahmed Osama.c,170 :: 		Auto(color);
0x015B	0x0850      	MOVF       _color, 0
0x015C	0x00D6      	MOVWF      FARG_Auto_color
0x015D	0x0851      	MOVF       _color+1, 0
0x015E	0x00D7      	MOVWF      FARG_Auto_color+1
0x015F	0x20F9      	CALL       _Auto
;TL-Ahmed Osama.c,171 :: 		}else{
0x0160	0x2966      	GOTO       L_main43
L_main42:
;TL-Ahmed Osama.c,173 :: 		Manual(color);
0x0161	0x0850      	MOVF       _color, 0
0x0162	0x00D6      	MOVWF      FARG_Manual_color
0x0163	0x0851      	MOVF       _color+1, 0
0x0164	0x00D7      	MOVWF      FARG_Manual_color+1
0x0165	0x20BB      	CALL       _Manual
;TL-Ahmed Osama.c,174 :: 		}
L_main43:
;TL-Ahmed Osama.c,176 :: 		}
0x0166	0x2957      	GOTO       L_main40
;TL-Ahmed Osama.c,177 :: 		}
L_end_main:
0x0167	0x2967      	GOTO       $+0
; end of _main
0x01A2	0x3020      	MOVLW      32
0x01A3	0x0084      	MOVWF      FSR
0x01A4	0x3034      	MOVLW      52
0x01A5	0x1283      	BCF        STATUS, 5
0x01A6	0x1303      	BCF        STATUS, 6
0x01A7	0x00F0      	MOVWF      R0
0x01A8	0x306D      	MOVLW      109
0x01A9	0x00D4      	MOVWF      ___DoICPAddr
0x01AA	0x3001      	MOVLW      1
0x01AB	0x00D5      	MOVWF      85
0x01AC	0x20ED      	CALL       237
0x01AD	0x0008      	RETURN
;TL-Ahmed Osama.c,0 :: ?ICS_number
0x016D	0x3400 ;?ICS_number+0
0x016E	0x3400 ;?ICS_number+1
0x016F	0x3401 ;?ICS_number+2
0x0170	0x3400 ;?ICS_number+3
0x0171	0x3402 ;?ICS_number+4
0x0172	0x3400 ;?ICS_number+5
0x0173	0x3403 ;?ICS_number+6
0x0174	0x3400 ;?ICS_number+7
0x0175	0x3404 ;?ICS_number+8
0x0176	0x3400 ;?ICS_number+9
0x0177	0x3405 ;?ICS_number+10
0x0178	0x3400 ;?ICS_number+11
0x0179	0x3406 ;?ICS_number+12
0x017A	0x3400 ;?ICS_number+13
0x017B	0x3407 ;?ICS_number+14
0x017C	0x3400 ;?ICS_number+15
0x017D	0x3408 ;?ICS_number+16
0x017E	0x3400 ;?ICS_number+17
0x017F	0x3409 ;?ICS_number+18
0x0180	0x3400 ;?ICS_number+19
0x0181	0x3410 ;?ICS_number+20
0x0182	0x3400 ;?ICS_number+21
0x0183	0x3411 ;?ICS_number+22
0x0184	0x3400 ;?ICS_number+23
0x0185	0x3412 ;?ICS_number+24
0x0186	0x3400 ;?ICS_number+25
0x0187	0x3413 ;?ICS_number+26
0x0188	0x3400 ;?ICS_number+27
0x0189	0x3414 ;?ICS_number+28
0x018A	0x3400 ;?ICS_number+29
0x018B	0x3415 ;?ICS_number+30
0x018C	0x3400 ;?ICS_number+31
0x018D	0x3416 ;?ICS_number+32
0x018E	0x3400 ;?ICS_number+33
0x018F	0x3417 ;?ICS_number+34
0x0190	0x3400 ;?ICS_number+35
0x0191	0x3418 ;?ICS_number+36
0x0192	0x3400 ;?ICS_number+37
0x0193	0x3419 ;?ICS_number+38
0x0194	0x3400 ;?ICS_number+39
0x0195	0x3420 ;?ICS_number+40
0x0196	0x3400 ;?ICS_number+41
0x0197	0x3421 ;?ICS_number+42
0x0198	0x3400 ;?ICS_number+43
0x0199	0x3422 ;?ICS_number+44
0x019A	0x3400 ;?ICS_number+45
0x019B	0x3423 ;?ICS_number+46
0x019C	0x3400 ;?ICS_number+47
; end of ?ICS_number
;TL-Ahmed Osama.c,0 :: ?ICS_color
0x019D	0x3400 ;?ICS_color+0
0x019E	0x3400 ;?ICS_color+1
; end of ?ICS_color
;TL-Ahmed Osama.c,0 :: ?ICS_counter
0x019F	0x3400 ;?ICS_counter+0
0x01A0	0x3400 ;?ICS_counter+1
; end of ?ICS_counter
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [87]    _display_Manual
0x005A       [7]    _____DoICP
0x0061      [90]    _display_Auto
0x00BB      [50]    _Manual
0x00ED      [12]    ___CC2DW
0x00F9      [77]    _Auto
0x0146      [33]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x0020      [48]    _number
0x0050       [2]    _color
0x0052       [2]    _counter
0x0054       [2]    ___DoICPAddr
0x0056       [2]    FARG_Manual_color
0x0056       [2]    FARG_Auto_color
0x0058       [2]    FARG_display_Auto_timer
0x0058       [2]    FARG_display_Manual_color
0x005A       [2]    FARG_display_Auto_color
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x009F       [1]    ADCON1
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x016D      [48]    ?ICS_number
0x019D       [2]    ?ICS_color
0x019F       [2]    ?ICS_counter
//** Label List: ** 
//----------------------------------------------
  L_display_Auto0
  L_display_Auto1
  L_display_Auto2
  L_display_Auto3
  L_display_Auto4
  L_display_Auto5
  L_display_Auto6
  L_display_Auto7
  L_display_Auto8
  L_display_Auto9
  L_display_Auto10
  L_display_Manual11
  L_display_Manual12
  L_display_Manual13
  L_display_Manual14
  L_display_Manual15
  L_display_Manual16
  L_display_Manual17
  L_display_Manual18
  L_display_Manual19
  L_display_Manual20
  L_display_Manual21
  L_display_Manual22
  L_display_Manual23
  L_display_Manual24
  L_display_Manual25
  L_display_Manual26
  L_Auto27
  L_Auto28
  L_Auto29
  L_Auto30
  L_Auto31
  L_Auto32
  L_Auto33
  L_Auto34
  L_Auto35
  L_Manual36
  L_Manual37
  L_Manual38
  L_Manual39
  L_main40
  L_main41
  L_main42
  L_main43
  L__display_Auto44
  L__display_Auto45
  L__display_Manual46
  L__Auto47
  L_end_display_Auto
  _display_Auto
  L__display_Auto49
  L__display_Auto50
  L__display_Auto51
  L__display_Auto52
  L__display_Auto53
  L_end_display_Manual
  _display_Manual
  L__display_Manual55
  L__display_Manual56
  L__display_Manual57
  L_end_Auto
  _Auto
  L__Auto59
  L__Auto60
  L__Auto61
  L_end_Manual
  _Manual
  L__Manual63
  L__Manual64
  L_end_main
  _main
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
